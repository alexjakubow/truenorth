---
title: "Open Science Preprints on OSF"
date: "2025-09-08"
date-modified: last-modified
---

# Overview

This vignette examines candidacy criteria for open science among OSF Preprints.

Candidate preprints meet standards for and *openness*, *non-deprecation*, *authenticity*.  Specifically, an open-science preprint must be:


**Open**

1. Public (open-1)

**Non-deprecated**

1. Accepted (nondeprecated-1)
2. Published (nondeprecated-2)
3. Not deleted (nondeprecated-3)
4. Not withdrawn (nondeprecated-4)

**Authentic**

5. Not spam (authentic-1)

## Operationalization

We can use the date variables in the `osf_preprint` table and related actions in the `osf_preprintlog` table to generate a time series dataset of OSF Preprints. 

From the `osf_preprint` table, we already know when the following actions occured:

- `created`
- `date_published`
- `date_withdrawn`
- `deleted`

To get at *when* a preprint becomes: 

- public, we need to look for the `made_public` and `made_private` action types in the `osf_preprintlog` table.  
- spam, we look for the actions of type `confirm_spam` in the `osf_preprintlog` table.

For every criteria of interest (i.e. public, accepted, published, non-deleted, non-withdrawn, non-spam), if we cannot find a corresponding action in the `osf_preprintlog` table, we will assume that the criteria is met at the time of creation (`created`).

## Implementation

See `preprints.r` and `preprints-ts.r` for the bulk of the implementation details.  For now, we just load the datasets we need.

```{r setup}
# Packages
library(arrow)
library(dplyr)
library(lubridate)
library(tidyr)
library(purrr)
library(rlang)
library(timetk)
library(gt)

# Modules
box::use(
    R / connect[open_parquet],
    R / helpers[tidy_provider_names],
    R / plot[pivoter, ppt_factorizer, ts_prep],
)

# Sources
all_ts <- read_parquet(here::here("data/preprint_tsmonthly.parquet"))
provider_ts <- read_parquet(here::here("data/preprint_providers_tsmonthly.parquet")) |>
    mutate(provider = tidy_provider_names(provider))

# Pivot for plots and assign labels
all_summary <- pivoter(all_ts) |>
    ts_prep()
provider_summary <- pivoter(provider_ts, provider) |>
    ts_prep()

# Constants
MOST_RECENT_CHR <- max(all_ts$date)
MOST_RECENT <- ymd(MOST_RECENT_CHR)
TABLE_CRITERIA <- c(
    "total", "open", "not_deprecated", "authentic",
    "open_notdep", "open_auth", "notdep_auth",
    "los_outcome")
TABLE_NAMES <- c(
    "Total", "Open", "Non-deprecated", "Authentic",
    "Open + Non-deprecated", "Open + Authentic", "Non-deprecated + Authentic",
    "Open Science Preprint")
```


# Results

## All Preprints

> NOTE: All graphs are interactive.  Click on the legend to toggle series on/off.  You can also use the slider to scroll through the timerange.  Zooming is also supported.

The following plots show the distribution of preprints along multiple (sub)criteria of interest.  The total number of preprints (i.e., all preprints in the database wihthout *any* filtering) is shown in black.

The following graph plots the distribution of preprints along all distinct sub-criteria of interest denoted at the beginning.  Preprints can be duplicated across criteria.  The total number of preprints is shown in black.

```{r}
all_summary |>
    ppt_factorizer(criteria) |>
    plot_time_series(date, n, .color_var = criteria, .smooth = FALSE,
    .title = "OSF Preprints by Open Science Subcriteria")
```

The next figure plots the distribution of preprints according to the three main criteria of interest (i.e., Open, Non-deprecated, Authentic).  Plus signs (+) indicate preprints that jointly satisfy 2 or more criteria.  The "Open Science Preprint" line plots the number of preprints meeting all 3 criteria.

```{r}
all_summary |>
    ppt_factorizer(criteria, 2) |>
    plot_time_series(date, n, .color_var = criteria, .smooth = FALSE,
    .title = "OSF Preprints by Open Science Criteria")

```

The next graph is just a simplified version of the previous one, where we only show preprints that jointly satisfy 2 or more criteria.  The "Total" line is included for reference.

```{r}
all_summary |> 
    ppt_factorizer(criteria, 3) |>
    plot_time_series(date, n, .color_var = criteria, .smooth = FALSE,
    .title = "OSF Preprints with 2+ Open Science Criteria")
```


## Summary by Provider

```{r}
provider_tbl <- provider_summary |>
    filter(criteria %in% TABLE_CRITERIA) |>
    pivot_wider(id_cols = c(date, provider), names_from = criteria, values_from = n)
colnames(provider_tbl) <- c("Date", "Provider", TABLE_NAMES)

provider_tbl <- provider_tbl |>
    select(Date, Provider, Total, starts_with("Open")) |>
    mutate(
        `OSP / Open` = `Open Science Preprint` / Open,
        `OSP / Total` = `Open Science Preprint` / Total)

provider_gtbl <- provider_tbl |>
    ungroup() |>
    filter(Date == MOST_RECENT) |>
    arrange(desc(`Open Science Preprint`)) |>
    select(-Date) |>
    gt() |>
    tab_header(
        title = "Open Science Preprints by Provider",
        subtitle = paste0("as of ", MOST_RECENT_CHR)) |>
    fmt_number(columns = c(Total:`Open Science Preprint`), decimals = 0) |>
    fmt_percent(columns = c(`OSP / Open`, `OSP / Total`), decimals = 1) 
```


Here's a summary table of OSF Preprints by Provider:

- `Total`: Total number of OSF Preprints (no filtering at all)
- `Open`: Number of preprints that are public and not embargoed
- `Open + Non-deprecated`: Number of preprints that are Open and are registered, not deleted, and not retracted
- `Open + Authentic`: Number of preprints that are Open and are not spam
- `Open Science Preprint`: Number of preprints meeting all three criteria (i.e., Open + Non-deprecated + Authentic)
- `OSP / Open`: Percentage of Open (i.e., public and not embargoed) preprints that meet the Open Science Preprint criteria
- `OSP / Total`: Percentage of Total preprints that meet the Open Science Preprint criteria

```{r}
provider_gtbl
```

We can also plot these numbers over time for each provider.  Because of the disparity in the number of preprints between registries, we calculate the percentage of preprints that meeting Open Science Preprint criteria.  This are the `OSP / Open` and `OSP / Total` metrics from the previous table.

```{r}
# Prep
provider_ptbl <- provider_tbl |>
    select(Date, Provider, `OSP / Open`, `OSP / Total`) |>
    pivot_longer(
        cols = c(`OSP / Open`, `OSP / Total`),
        names_to = "Metric", values_to = "Percentage") |>
    ungroup()

# First plot
provider_ptbl |>
    filter(Metric == "OSP / Open") |>
    plot_time_series(Date, Percentage, .color_var = Provider,
    .smooth = FALSE, .title = "Open Efficiency of OSF Preprints by Provider")
```

```{r}
# Second plot
provider_ptbl |>
    filter(Metric == "OSP / Total") |>
    plot_time_series(Date, Percentage, .color_var = Provider,
    .smooth = FALSE, .title = "Total Efficiency of OSF Preprints by Provider")
```